/*
 * Deposit Account API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.Objects;

@JsonPropertyOrder({
        AccountDetails.JSON_PROPERTY_ACCOUNT_NAME,
        AccountDetails.JSON_PROPERTY_ACCOUNT_DESCRIPTION
})
@JsonTypeName("AccountDetails")
public class AccountDetails {
    public static final String JSON_PROPERTY_ACCOUNT_NAME = "accountName";
    public static final String JSON_PROPERTY_ACCOUNT_DESCRIPTION = "accountDescription";
    private String accountName;
    private String accountDescription;

    public AccountDetails accountName(String accountName) {

        this.accountName = accountName;
        return this;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getAccountName() {
        return accountName;
    }


    @JsonProperty(JSON_PROPERTY_ACCOUNT_NAME)
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    public AccountDetails accountDescription(String accountDescription) {

        this.accountDescription = accountDescription;
        return this;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getAccountDescription() {
        return accountDescription;
    }


    @JsonProperty(JSON_PROPERTY_ACCOUNT_DESCRIPTION)
    public void setAccountDescription(String accountDescription) {
        this.accountDescription = accountDescription;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AccountDetails accountDetails = (AccountDetails) o;
        return Objects.equals(this.accountName, accountDetails.accountName) &&
                Objects.equals(this.accountDescription, accountDetails.accountDescription);
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountName, accountDescription);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AccountDetails {\n");
        sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
        sb.append("    accountDescription: ").append(toIndentedString(accountDescription)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

